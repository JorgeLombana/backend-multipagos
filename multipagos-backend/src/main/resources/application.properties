spring.application.name=multipagos-backend

# Server Configuration
server.port=8080

# Puntored API Configuration
puntored.api.base-url=https://us-central1-puntored-dev.cloudfunctions.net/technicalTest-developer/api
puntored.api.key=mtrQF6Q11eosqyQnkMY0JGFbGqcxVg5icvfVnX1ifIyWDvwGApJ8WUM8nHVrdSkN
puntored.api.username=user0147
puntored.api.password=#3Q34Sh0NlDS

# HTTP Client Configuration
spring.http.client.connect-timeout=10000
spring.http.client.read-timeout=30000

# JWT Configuration - Production should use environment variables
jwt.secret=${JWT_SECRET:multipagos-super-secret-key-for-jwt-authentication-should-be-changed-in-production-256-bits-minimum}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Database Configuration - MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/multipagos?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=jorge
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# Logging Configuration - Optimized for CloudWatch AWS
logging.level.com.multipagos=INFO
logging.level.org.springframework=WARN
logging.level.org.apache.catalina=WARN
logging.level.org.springframework.boot=WARN
logging.level.org.springframework.security=WARN
logging.level.org.springframework.boot.autoconfigure.security=ERROR

# Console format for development (with colors)
logging.pattern.console=%d{HH:mm:ss.SSS} %highlight(%-5level) %cyan(%-20.20c{0}) %msg%n

# File format for production/CloudWatch (no colors, structured)
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %-20.20c{0} %msg%n


