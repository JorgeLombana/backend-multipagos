# Production Configuration for AWS Deployment
spring.application.name=multipagos-backend

# Server Configuration
server.port=8080

# Puntored API Configuration (from environment)
puntored.api.base-url=${PUNTORED_API_BASE_URL:https://us-central1-puntored-dev.cloudfunctions.net/technicalTest-developer/api}
puntored.api.key=${PUNTORED_API_KEY:mtrQF6Q11eosqyQnkMY0JGFbGqcxVg5icvfVnX1ifIyWDvwGApJ8WUM8nHVrdSkN}
puntored.api.username=${PUNTORED_API_USERNAME:user0147}
puntored.api.password=${PUNTORED_API_PASSWORD:#3Q34Sh0NlDS}

# HTTP Client Configuration
spring.http.client.connect-timeout=15000
spring.http.client.read-timeout=45000

# JWT Configuration - Use environment variables in production
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION:86400000}

# API Configuration
app.api.version=v1
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS}

# Security Configuration
server.error.whitelabel.enabled=false
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false

# Tomcat Security for ALB
server.tomcat.remoteip.remote-ip-header=x-forwarded-for
server.tomcat.remoteip.protocol-header=x-forwarded-proto
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.same-site=strict

# Actuator for health checks and monitoring
management.endpoints.web.base-path=/actuator
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.info.env.enabled=true

# Database Configuration - RDS MySQL
spring.datasource.url=jdbc:mysql://multipagos-db.ca9g8e6mq27x.us-east-1.rds.amazonaws.com:3306/multipagos?useSSL=true&serverTimezone=UTC&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
spring.datasource.username=admin
spring.datasource.password=MultiPagos2025!Pass
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Connection pool configuration for production
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.pool-name=Multipagos-HikariCP

# JPA/Hibernate Configuration for production
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Logging Configuration for CloudWatch
logging.level.com.multipagos=INFO
logging.level.org.springframework=WARN
logging.level.org.apache.catalina=WARN
logging.level.org.springframework.boot=WARN
logging.level.org.springframework.security=WARN

# CloudWatch compatible logging format (JSON)
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %-40.40logger{40} : %msg%n

# Metrics and monitoring
management.metrics.export.cloudwatch.namespace=Multipagos
management.metrics.export.cloudwatch.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Application info for monitoring
info.app.name=@project.name@
info.app.version=@project.version@
info.app.description=Multipagos API Backend
info.app.encoding=@project.build.sourceEncoding@
info.java.version=@java.version@
